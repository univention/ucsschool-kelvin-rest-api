include:
  - project: 'univention/documentation/sphinx-docker'
    file: 'pipeline/sphinx.yml'
  - project: univention/dist/docker-services
    file:
    - kaniko.yml
    - pre-commit.yml

workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" && $CI_OPEN_MERGE_REQUESTS
    - if: $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_REF_PROTECTED == "true"
    - if: $CI_PIPELINE_SOURCE == "web"
    - if: $CI_PIPELINE_SOURCE == "webide"


stages:
  - prepare
  - lint
  - build
  - tests
  - merge
  - production

# todo: add renovate

variables:
  DOCS_DIR: "doc/docs"
  APP_ID: "ucsschool-kelvin-rest-api"
  APP_NAME: "4.5/$APP_ID"
  PACKAGE: "ucs-test-ucsschool-kelvin"
  UCS_VERSION: "503"
  UCS_RELEASE: "5.0"
  SCOPE: "ucs-school-5.0"
  DOC_TARGET_NAME: $APP_ID
  DOC_TARGET_PATH: $DOC_TARGET_NAME
  DEB_IMAGE: docker-registry.knut.univention.de/phahn/ucs-debbase:$UCS_VERSION
  UCSLINT_IMAGE: gitregistry.knut.univention.de/univention/ucs
  APPCENTER_CONTROL_IMAGE: "docker-registry.knut.univention.de/knut/univention-appcenter-control"

# This would use an image with the same name as the one
# used in build_docker_image. IMAGE_TAG can only be set once and
# can not be reset. The image has to be built manually until then.!reference:
# todo: fix this
#build_pre_commit:
#  stage: prepare
#  rules:
#    - changes:
#      - .gitlab-ci/Dockerfile.pre-commit
#      - .bandit
#      - .black
#      - .dockerignore
#      - .flake8
#      - .isort.cfg
#      - .pre-commit-config.yaml
#  extends: .kaniko
#  variables:
#    DOCKERFILE_PATH: .gitlab-ci/Dockerfile.pre-commit
#    KANIKO_ARGS: --cache=true

run_pre_commit:
  stage: lint
  extends: .pre-commit
  variables:
    PRE_COMMIT_IMAGE: "docker-registry.knut.univention.de/knut/pre-commit-opa-python3.11"


prepare:
  stage: prepare
  rules:
    - changes:
        - docker/*
        - kelvin-api/**/*
        - ucs-school-import/**/*
        - ucs-school-lib/**/*
        - univention-directory-manager-modules-slim/**/*
        - univention-lib-slim/**/*
  image:
    name: python:3.9-bullseye
  artifacts:
    paths:
    - docker/build/
    expire_in: 1 day
  cache:
    - key: "$CI_COMMIT_REF_SLUG"
      paths:
        - docker/build/
  script:
    - apt-get update
    - apt-get install -y git rsync
    - cd ${CI_PROJECT_DIR}/docker
    - ./gitlab_prepare_docker_image


docs-html:
  extends: .sphinx-html-template
  rules:
    - changes:
      - $DOCS_DIR/**/*

docs-pdf:
  extends: .sphinx-pdf-template
  rules:
    - changes:
      - $DOCS_DIR/**/*

docs-linkcheck:
  extends: .sphinx-linkcheck-template
  rules:
    - changes:
      - $DOCS_DIR/**/*

docs-spelling:
  extends: .sphinx-spelling-template
  rules:
    - changes:
      - $DOCS_DIR/**/*

docs-warnings:
  extends: .sphinx-warnings-template
  rules:
    - changes:
      - $DOCS_DIR/**/*

docs-merge-to-one-artifact:
  extends: .sphinx-merge-template
  needs:
    - job: docs-html
    - job: docs-pdf
    - job: docs-spelling
      artifacts: false
    - job: docs-linkcheck
      artifacts: false
  rules:
    - if: $CI_COMMIT_BRANCH != $CI_DEFAULT_BRANCH
      changes:
      - $DOCS_DIR/**/*
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      changes:
      - $DOCS_DIR/**/*
      when: manual

# The template has inherit:variables:false to prevent the passing of pipeline
# variables to downstream, and therefore $DOCS_DIR is not available here.
docs-create-production-merge-request:
  extends: .sphinx-docs-merge-request-template
  needs:
    - job: docs-merge-to-one-artifact
  rules:
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'
      changes:
      - doc/docs/**/*


build_docker_image:
  stage: build
  rules:
    - changes:
        - docker/*
        - kelvin-api/**/*
        - ucs-school-import/**/*
        - ucs-school-lib/**/*
        - univention-directory-manager-modules-slim/**/*
        - univention-lib-slim/**/*
  extends: .kaniko
  variables:
      KANIKO_BUILD_CONTEXT: "$CI_PROJECT_DIR/docker/build/"
      KANIKO_ARGS: --build-arg app_id="$APP_ID" --build-arg commit="$CI_COMMIT_SHA" --build-arg date="$CI_JOB_STARTED_AT" --cache=true --cache-repo $CI_REGISTRY_IMAGE/cache --cache-copy-layers

tests:
  stage: tests
  rules:
    - changes:
        - kelvin-api/**/*
        - ucs-school-lib/**/*
  needs:
    - job: build_docker_image
  image: $IMAGE_TAG
  script:
    - cd ${CI_PROJECT_DIR}/ucs-school-lib/modules/ucsschool/lib && python3 -m pytest -lvv --asyncio-mode=auto tests
    - cd ${CI_PROJECT_DIR}/kelvin-api && python3 -m pytest -lvv --asyncio-mode=auto tests

ucs_test_deb_lint:
  stage: lint
  rules:
    - changes:
      - ucs-test-ucsschool-kelvin/**/*
  image:
    name: $UCSLINT_IMAGE
    entrypoint: [""]
  script:
    - cd ucs-test-ucsschool-kelvin && ucslint -j ucslint.xml
  artifacts:
    reports:
      junit: ucs-test-ucsschool-kelvin/ucslint.xml

ucs_test_deb_build_git:
  stage: build
  image: $DEB_IMAGE
  rules:
    - if: $CI_COMMIT_BRANCH != $CI_DEFAULT_BRANCH
      changes:
        - ucs-test-ucsschool-kelvin/**/*
  script:
    - apt-get update
    - cd ucs-test-ucsschool-kelvin
    - apt-get -q --assume-yes build-dep .
    - dpkg-buildpackage -us -uc
    - install -d -m 755 build
    - mv ../*.tar.*z ../*.dsc ../*.deb ../*.buildinfo ../*.changes build/
  artifacts:
    paths:
      - ucs-test-ucsschool-kelvin/build/

ucs_test_deb_repo_import:
  stage: build
  variables:
    GIT_STRATEGY: none
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      changes:
        - ucs-test-ucsschool-kelvin/debian/changelog
  tags:
    - omar
  script:
    - >
      repo_admin.py
      -G $CI_REPOSITORY_URL
      -b $CI_COMMIT_BRANCH
      -P ucs-test-ucsschool-kelvin
      -r ${UCS_RELEASE}-0-0
      -s $SCOPE
      -p $PACKAGE

ucs_test_deb_repo_build:
  stage: build
  needs:
    - job: ucs_test_deb_repo_import
      artifacts: false
  variables:
    GIT_STRATEGY: none
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      changes:
        - ucs-test-ucsschool-kelvin/debian/changelog
  tags:
    - ladda
  script:
    - >
      build-package-ng
      --no-pbuilder-update
      -r ${UCS_RELEASE}-0-0
      -s $SCOPE
      -p $PACKAGE

upload_appcenter_scripts_to_test_appcenter:
  stage: production
  image: $APPCENTER_CONTROL_IMAGE
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      changes:
        - appcenter/**
  script:
    - APP_VERSION="$(cat kelvin-api/VERSION.txt)"
    - cd appcenter
    - echo "updating $APP_NAME=$APP_VERSION"
    - univention-appcenter-control upload "$APP_NAME=$APP_VERSION" configure env inst README_UPDATE_DE README_UPDATE_EN restore_data_after_setup settings store_data uinst preinst listener_trigger
