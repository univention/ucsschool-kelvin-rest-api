include:
  - project: 'univention/documentation/sphinx-docker'
    file: 'pipeline/sphinx.yml'
  - project: univention/dist/docker-services
    file:
    - kaniko.yml
    - pre-commit.yml

workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" && $CI_OPEN_MERGE_REQUESTS
    - if: $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_REF_PROTECTED == "true"
    - if: $CI_PIPELINE_SOURCE == "web"
    - if: $CI_PIPELINE_SOURCE == "webide"


stages:
  - prepare
  - lint
  - build
  - tests
  - merge
  - production

variables:
  DOCS_DIR: "doc/docs"
  APP_ID: "ucsschool-kelvin-rest-api"
  DOC_TARGET_NAME: $APP_ID
  DOC_TARGET_PATH: $DOC_TARGET_NAME


build_pre_commit:
  stage: prepare
  rules:
    - changes:
      - .gitlab-ci/Dockerfile.pre-commit
      - .bandit
      - .black
      - .dockerignore
      - .flake8
      - .isort.cfg
      - .pre-commit-config.yaml
  extends: .kaniko
  variables:
    DOCKERFILE_PATH: .gitlab-ci/Dockerfile.pre-commit
    KANIKO_ARGS: --cache=true
    # using CI_REGISTRY_IMAGE=gitregistry... yields a permission error
    # IMAGE_TAG can't be reset in following jobs.
    CI_REGISTRY_IMAGE: "gitregistry.knut.univention.de/v2/univention/components/pre-commit-kelvin"

run_pre_commit:
  stage: lint
  extends: .pre-commit
  needs:
    - job: build_pre_commit
      optional: true
  variables:
      # The image will have the branch name when built in the branch, i.e. not latest.
      # The logic from the .kaniko template should not be duplicated here.
      # If the image is being worked on in a branch change the tag.
     PRE_COMMIT_IMAGE: "gitregistry.knut.univention.de/v2/univention/components/pre-commit-kelvin:latest"



prepare:
  stage: prepare
  rules:
    - changes:
        - docker/*
        - kelvin-api/**/*
        - ucs-school-import/**/*
        - ucs-school-lib/**/*
        - univention-directory-manager-modules-slim/**/*
        - univention-lib-slim/**/*
  image:
    name: python:3.9-bullseye
  artifacts:
    paths:
    - docker/build/
    expire_in: 1 day
  cache:
    - key: "$CI_COMMIT_REF_SLUG"
      paths:
        - docker/build/
  script:
    - apt-get update
    - apt-get install -y git rsync
    - cd ${CI_PROJECT_DIR}/docker
    - ./gitlab_prepare_docker_image


html:
  extends: .sphinx-html-template
  rules:
    - changes:
      - $DOCS_DIR/**/*

pdf:
  extends: .sphinx-pdf-template
  rules:
    - changes:
      - $DOCS_DIR/**/*

linkcheck:
  extends: .sphinx-linkcheck-template
  rules:
    - changes:
      - $DOCS_DIR/**/*

spelling:
  extends: .sphinx-spelling-template
  rules:
    - changes:
      - $DOCS_DIR/**/*

docs-merge:
  extends: .sphinx-merge-template
  needs:
    - job: html
      artifacts: true
    - job: pdf
      artifacts: true
    - job: spelling
      artifacts: false
    - job: linkcheck
      artifacts: false
  rules:
    - changes:
      - $DOCS_DIR/**/*

docs-production:
  stage: production
  cache:
    key: docs-$CI_COMMIT_REF_SLUG
    paths:
      - univention-docs
  interruptible: false
  variables:
    GIT_STRATEGY: none
    GIT_AUTHOR_NAME: $GITLAB_USER_NAME
    GIT_AUTHOR_EMAIL: $GITLAB_USER_EMAIL
    GIT_COMMITTER_NAME: $GITLAB_USER_NAME
    GIT_COMMITTER_EMAIL: $GITLAB_USER_EMAIL
  needs:
    - job: docs-merge
      artifacts: true
  resource_group: prod
  image: docker-registry.knut.univention.de/knut/git-sync
  rules:
    - changes:
      - $DOCS_DIR/**/*
      if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'
      when: manual
  script:
    - git config --global credential.$CI_SERVER_URL.username ucs-docs-deployment
    - git config --global credential.$CI_SERVER_URL.helper '!f() { [ "$1" = get ] && echo password="$DOCS_TOKEN"; }; f'
    - '[ -d univention-docs ] || git clone --branch master --depth 1 --single-branch $CI_SERVER_URL/univention/docs.univention.de.git univention-docs'
    - cd univention-docs
    - git clean --force -d
    - git fetch --no-tags origin
    - git reset --hard origin/master
    - rsync -av --delete "$CI_PROJECT_DIR"/out/"$DOC_TARGET_NAME"/ ./"$DOC_TARGET_NAME"/
    - git add -- .
    - git commit -m "Automatic doc deployment from $CI_PROJECT_PATH by GitLab commit $CI_COMMIT_SHA"
    - git push
  environment:
    name: production
    url: http://updates.knut.univention.de/download/docs/$DOC_TARGET_NAME


build_docker_image:
  stage: build
  needs:
    - job: prepare
  rules:
    - changes:
        - docker/*
        - kelvin-api/**/*
        - ucs-school-import/**/*
        - ucs-school-lib/**/*
        - univention-directory-manager-modules-slim/**/*
        - univention-lib-slim/**/*
  extends: .kaniko
  variables:
      KANIKO_BUILD_CONTEXT: "$CI_PROJECT_DIR/docker/build/"
      KANIKO_ARGS: --build-arg app_id="$APP_ID" --build-arg commit="$CI_COMMIT_SHA" --build-arg date="$CI_JOB_STARTED_AT" --cache=true --cache-repo $CI_REGISTRY_IMAGE/cache --cache-copy-layers
      # If CI_REGISTRY_IMAGE is set like in  build_pre_commit, it has to be re-set per job
      CI_REGISTRY_IMAGE: "gitregistry.knut.univention.de/univention/components/$APP_ID"

tests:
  stage: tests
  rules:
    - changes:
        - kelvin-api/**/*
        - ucs-school-lib/**/*
  needs:
    - job: build_docker_image
  image: $IMAGE_TAG
  script:
    - cd ${CI_PROJECT_DIR}/kelvin-api && make test
    - cd ${CI_PROJECT_DIR}/ucs-school-lib/modules/ucsschool/lib && pytest -v tests