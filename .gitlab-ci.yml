stages:
  - prepare
  - build

prepare:
  stage: prepare
  tags:
    - dm-s
  image:
    name: python:3.9-bullseye
  artifacts:
    paths:
    - docker/build/
    expire_in: 1 day
  script:
    - apt-get update
    - apt-get install git rsync
    - cd ${CI_PROJECT_DIR}/docker
    - ./gitlab_prepare_docker_image

build:
  stage: build
  tags:
    - dm-s
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    # install KNUT CA
    - install -m 644 "$KNUT_CA" /kaniko/ssl/certs/knut.pem
    - cat /kaniko/ssl/certs/knut.pem >> /kaniko/ssl/certs/ca-certificates.crt
    # default tag is "test-SHA1HASH" ; in default branch the tag "release-SHA1HASH" is used
    - export DOCKER_TAG="test-${CI_COMMIT_SHA}"
    - if [ -n "$CI_COMMIT_TAG" ] ; then export DOCKER_TAG="release-${CI_COMMIT_TAG}" ; export ARG_DESTINATION_LATEST="--destination ${CI_REGISTRY_IMAGE}:latest" ; fi
    # build docker container
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"${CI_REGISTRY}\":{\"auth\":\"$(printf "%s:%s" "${CI_REGISTRY_USER}" "${CI_REGISTRY_PASSWORD}" | base64 | tr -d '\n')\"}}}" > /kaniko/.docker/config.json
    - cd ${CI_PROJECT_DIR}/docker
    - >-
      /kaniko/executor
      --force
      --context "${CI_PROJECT_DIR}/docker/build/"
      --dockerfile "${CI_PROJECT_DIR}/docker/build/Dockerfile"
      --destination "${CI_REGISTRY_IMAGE}:${DOCKER_TAG}"
      ${ARG_DESTINATION_LATEST}
